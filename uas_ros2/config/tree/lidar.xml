<?xml version="1.0" encoding="UTF-8"?>
<root BTCPP_format="4"
      main_tree_to_execute="NewTree">
  <BehaviorTree ID="LidarTest">
    <RetryUntilSuccessful num_attempts="-1">
      <LidarDetectObstacle cone_width="30"
                           distance="1"
                           threshold="0.25"
                           port=""/>
    </RetryUntilSuccessful>
  </BehaviorTree>

  <BehaviorTree ID="NewTree">
    <ReactiveFallback>
      <ReactiveSequence>
        <LidarDetectObstacle cone_width="180.000000"
                             distance=""
                             threshold="0.500000"
                             port=""/>
        <EnableHold port=""/>
      </ReactiveSequence>
      <GoTo lat=""
            lon=""
            alt=""
            port=""/>
    </ReactiveFallback>
  </BehaviorTree>

  <!-- Description of Node Models (used by Groot) -->
  <TreeNodesModel>
    <Action ID="EnableHold">
      <input_port name="port"
                  type="std::string">Name of the ROS 2 action.</input_port>
    </Action>
    <Action ID="GoTo">
      <input_port name="lat"
                  type="double">Target latitude</input_port>
      <input_port name="lon"
                  type="double">Target longitude</input_port>
      <input_port name="alt"
                  type="double">Target altitude in meter (AMSL)</input_port>
      <input_port name="port"
                  type="std::string">Name of the ROS 2 action.</input_port>
    </Action>
    <Condition ID="LidarDetectObstacle">
      <input_port name="cone_width"
                  default="180.000000"
                  type="double">Width [°] of the forward facing cone (centered around 0°) specifying the field of view to be considered.</input_port>
      <input_port name="distance"
                  type="double">Distance [m] at which an obstacle will be considered detected.</input_port>
      <input_port name="threshold"
                  default="0.500000"
                  type="double">Threshold [%] determining how many of the measured points must be within the configured range for the detection to be triggered.</input_port>
      <input_port name="port"
                  type="std::string">Name of the ROS 2 topic to subscribe to.</input_port>
    </Condition>
  </TreeNodesModel>

</root>
